import axios from 'axios';

// üîß L·∫•y baseURL t·ª´ bi·∫øn m√¥i tr∆∞·ªùng ho·∫∑c fallback v·ªÅ window.origin
const API_BASE_URL = process.env.REACT_APP_API_URL || window.location.origin;

// ‚úÖ T·∫°o axios instance d√πng chung
const axiosClient = axios.create({
  baseURL: `${API_BASE_URL}/api`, // ‚Üí V√≠ d·ª•: http://localhost:5000/api
  headers: {
    'Content-Type': 'application/json',
  },
});

// ‚úÖ Interceptor Request: T·ª± ƒë·ªông g·∫Øn token t·ª´ localStorage
axiosClient.interceptors.request.use(
  (config) => {
    try {
      const token = localStorage.getItem('token');
      if (token) {
        config.headers.Authorization = `Bearer ${token}`;
      }
    } catch (err) {
      console.error('‚ùå L·ªói khi g·∫Øn token v√†o request:', err);
    }
    return config;
  },
  (error) => Promise.reject(error)
);

// ‚úÖ Interceptor Response: B·∫Øt l·ªói 401/403 ƒë·ªÉ x·ª≠ l√Ω t·∫≠p trung
axiosClient.interceptors.response.use(
  (response) => response,
  (error) => {
    if (error.response) {
      const { status } = error.response;

      if (status === 401) {
        console.warn('‚ö†Ô∏è Token kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ h·∫øt h·∫°n.');
        // üëâ Tu·ª≥ b·∫°n x·ª≠ l√Ω: chuy·ªÉn v·ªÅ login, xo√° token,...
        // localStorage.removeItem('token');
        // window.location.href = '/login';
      }

      if (status === 403) {
        console.warn('‚õî Kh√¥ng c√≥ quy·ªÅn truy c·∫≠p t√†i nguy√™n.');
      }
    }

    return Promise.reject(error);
  }
);

export default axiosClient;
