import jwt from 'jsonwebtoken';
import User from '../models/User.js';

// X√°c th·ª±c token
export const verifyToken = async (req, res, next) => {
  try {
    const authHeader = req.headers.authorization;

    if (!authHeader?.startsWith('Bearer ')) {
      return res.status(401).json({ message: 'Kh√¥ng c√≥ token x√°c th·ª±c' });
    }

    const token = authHeader.split(' ')[1];
    const decoded = jwt.verify(token, process.env.JWT_SECRET);

    const user = await User.findById(decoded.id).select('-password');

    if (!user) {
      return res.status(401).json({ message: 'T√†i kho·∫£n kh√¥ng t·ªìn t·∫°i' });
    }

    // G·∫Øn th√¥ng tin ng∆∞·ªùi d√πng v√†o request
    req.user = {
      id: user._id,
      role: user.role,
      fullName: user.fullName,
      email: user.email,
    };

    next();
  } catch (err) {
    return res.status(401).json({ message: 'Token kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ h·∫øt h·∫°n' });
  }
};

// Middleware: ch·ªâ cho ph√©p Admin
export const isAdmin = (req, res, next) => {
  if (req.user?.role === 'admin') return next();
  return res.status(403).json({ message: 'Ch·ªâ qu·∫£n tr·ªã vi√™n m·ªõi ƒë∆∞·ª£c ph√©p truy c·∫≠p' });
};

// Middleware: cho Admin ho·∫∑c Th·ªß th∆∞
export const isAdminOrLibrarian = (req, res, next) => {
  console.log('Role:', req.user.role); // üëà Debug role
  if (req.user.role === 'admin' || req.user.role === 'librarian') {
    next();
  } else {
    return res.status(403).json({ message: 'B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p' });
  }
};

export const isLibrarian = (req, res, next) => {
  if (req.user.role !== 'librarian') {
    return res.status(403).json({ message: 'Ch·ªâ th·ªß th∆∞ m·ªõi ƒë∆∞·ª£c th·ª±c hi·ªán thao t√°c n√†y' });
  }
  next();
};

